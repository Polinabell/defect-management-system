# Конфигурация сервера для системы управления дефектами

server {
    listen 80;
    server_name localhost defect-management.local;
    
    # Редирект на HTTPS в production
    # return 301 https://$server_name$request_uri;
    
    # Основные настройки
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Логирование
    access_log /var/log/nginx/defect-management.access.log main;
    error_log /var/log/nginx/defect-management.error.log;

    # Статические файлы Django
    location /static/ {
        alias /app/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Дополнительные заголовки безопасности
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        
        # Gzip для статических файлов
        gzip_static on;
        
        # Rate limiting для статических файлов
        limit_req zone=static burst=20 nodelay;
    }

    # Медиа файлы (загруженные пользователями)
    location /media/ {
        alias /app/media/;
        expires 30d;
        add_header Cache-Control "public";
        
        # Безопасность для загруженных файлов
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        
        # Запрет выполнения скриптов
        location ~* \.(php|py|js|html|htm)$ {
            deny all;
        }
    }

    # API эндпоинты
    location /api/ {
        # Rate limiting для API
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout настройки
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Буферизация
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Кэширование GET запросов
        proxy_cache api_cache;
        proxy_cache_methods GET;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Заголовки кэширования
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Авторизация - специальный rate limiting
    location /api/auth/login/ {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Отключаем кэширование для авторизации
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Django admin (только для разработки)
    location /admin/ {
        # Ограничиваем доступ только для внутренних IP
        # allow 127.0.0.1;
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;
        
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Без кэширования для админки
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Health check эндпоинт
    location /health/ {
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Быстрый timeout для health check
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        
        # Без кэширования
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # Метрики (для мониторинга)
    location /metrics/ {
        # Ограничиваем доступ
        allow 127.0.0.1;
        allow 172.20.0.0/16;  # Docker сеть
        deny all;
        
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Основное приложение (React SPA)
    location / {
        try_files $uri $uri/ /index.html;
        root /app/frontend/build;
        
        # Кэширование HTML
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
        
        # Кэширование статических ресурсов React
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # Fallback на Django для неизвестных маршрутов
        # try_files $uri $uri/ @django;
    }

    # Fallback на Django
    location @django {
        proxy_pass http://django;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Блокировка доступа к служебным файлам
    location ~ /\. {
        deny all;
    }
    
    location ~ ~$ {
        deny all;
    }
    
    location ~* \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
    }

    # Robots.txt
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /admin/\nDisallow: /api/\n";
    }

    # Favicon.ico
    location = /favicon.ico {
        try_files $uri =204;
        access_log off;
        log_not_found off;
    }
}

# HTTPS конфигурация для production
# server {
#     listen 443 ssl http2;
#     server_name defect-management.com www.defect-management.com;
# 
#     # SSL сертификаты
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     
#     # SSL настройки
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 1d;
#     ssl_session_tickets off;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     
#     # ... остальная конфигурация как в HTTP блоке ...
# }
